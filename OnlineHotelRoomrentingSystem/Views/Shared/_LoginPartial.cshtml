@using Microsoft.AspNetCore.Identity
@using OnilineHotelRoomBookingSystem.Services.Data.Contacts
@using OnlineHotelRoomBookingSystem.Web.Infrastructure.Extensions
@using static OnlineHotelRoomrentingSystem.Commons.GeneralApplicationConstants;
@inject IAgentService agentService;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService user;
@inject IAgentService AgentService;

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        var users = await UserManager.GetUserAsync(User);
        var isAdmin = await UserManager.IsInRoleAsync(users, AdminRoleName);
        @if (!isAdmin && await agentService.ExistsByIdAsync(User.GetId()) == false)
        {
            <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Agent" asp-action="Become">Become Hotel Manager</a>
            </li>
        }
        <li class="nav-item">
        @if(await user.GetUserFullNameAsync(User.GetId()) is var fullName && fullName != null)
        {
                <a class="nav-link text-dark">Hello, @fullName</a>
        }
        else
        {
            <a class="nav-link text-dark">Hello, @User.Identity.Name</a>
        }
        </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
